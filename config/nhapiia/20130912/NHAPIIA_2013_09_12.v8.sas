options mprint;
options linesize=156;
/********* Documentation *******************************************************************************************************************;
 Written by Andy Lake (lakea@imsweb.com), Information Management Services, Inc. July 2008, Updated September 2013
 This program combines the macros from both the NHIAv2 program and NAPIIA program into one convenient SAS program.
 Please read through the documentation below for instructions and options for executing this program.
 1. Program allows users to run for naaccr layout file version 13
 2. Updated formats for Asian Indian and Pakistani birth place. Updated race format for Asian Indian.
 3. Update September 2013: NAACCR Ver 13 birthplace change.  DataItem_250 (Birthplace) replaced with DataItem_254 (Birthplace--Country)
********************************************************************************************************************************************;
*!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!     IMPORTANT - PLEASE READ      !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!;

In order to execute this program you will need to specify the location and name for the following files:

  Input file references:
   Registry Incidence Data File With Name Information, Logical Record Length (LRECL) 5564 Bytes (regfile reference below)
   NHAPIIA SAS Format File (fmats reference below)

  Output file refernces:
   Updated Registry Incidence Data File Without Name Information, Logical Record Length (LRECL) 3339 Bytes (submit reference below)
   Excel File With Cases That Require Manual Review Generated by the NAPIIA Macro (man_rvw reference below)

/********************************************************************************************************************************************;
Options For the NHIA Algorithm:
The default option to execute the NHIA algorithm is option 1 (NHIA_option = 'OPTION1').
Registries have the following options for counties in which less than 5% of the population is of Hispanic/Latino ethnicity
or to include all records:

(DEFAULT) 1. OPTION1     - Run the surname portion of the algorithm only on cases reported on data element 190, as Spanish surname only
                           or as unknown whether Spanish (item 190 codes 7 or 9).
                           In this choice, the surname portion will not be run on cases coded as 0, non-Hispanic.

          2. OPTION2     - Run the surname portion of the algorithm only on cases with a code of 7 on data element 190
                           (to verify that the surname is on the list of allowable Hispanic surnames)
                           AND convert all cases with a code of 9 (unknown if Hispanic) to a code of 0 (Not Hispanic).

          3. All Records - Executes the NHIA algorithm and includes all records.

   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
   !    Important Note: When using either Option 1 or Option 2, it is possible to have cases with multiple records with different county information. For these                   !
   !                    cases it is possible that some records are from counties that are excluded from the algorithm, and others are from counties that are included	          !
   !                    in the algorithm. In these situations it is possible that NHIA is not consistent accross all records. Registries should review these cases and determine  !
   !    	        the appropiate value for the NHIA field. (added 06/12/2009)											          !
   !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!

        To choose one of the options modify the code two lines below   */
%global NHIA_option;
%let NHIA_option = 'OPTION2' ;
     /* To include all records for surname identification type: %let NHIA_option = 'All Records';
        For Option 1 described above, type: %let NHIA_option = 'OPTION1';
        For Option 2 described above, type: %let NHIA_option = 'OPTION2';                                                   */
********************************************************************************************************************************************;

 */
/* NHIA Version 2.2.1 - Notes
  SAS Adaptation of NAACCR Hispanic Identification Algorithm (NHIA) re-programmed for runtime efficiency.
  The SAS Code is based on logic contained in the Hispanic Identification Report 2003 and generates:
  1) a more specific Hispanic/Latino ethnicity variable (cc 231)
  2) a dataset of cases that state originally coded as Hispanic, but algorithm coded as non-Hispanic/unknown (optional)
  3) a dataset of cases that state originally coded as non-Hispanic/unknown, but algorithm coded as Hispanic (optional)

  For information regarding NHIA contact:
  Andy Lake, Information Management Services Inc.
  301.984.3445 extension 524
  lakea@imsweb.com
  Or
  Frank Boscoe
  fpb01@health.state.ny.us
  */

/* NAPIIA Version 1.2.1 - Notes SAS implementation of NAACCR Asian/Pacific Islander Identification Algorithm
  The SAS Code is based on logic contained in the NAACCR Asian Pacific Islander Work Group, NAACCR Asian Pacific Islander Identification Algorithm [NAPIIA v1]
  This program will run under SAS version 9.13 (service pack 4)
  This portion of the program generates:
  1) A new Asian-Pacific Islander variable (cc 1447).
  2) Summary statistics, including frequency distributions to show verify data are recoded.
  3) A listing of cases which are output for manual review of Race information based on steps 1 and 2.

  For information regarding the NAPIIA macro please contact:

  Andy Lake, Information Management Services Inc.
  301.984.3445 extension 524
  lakea@imsweb.com
  Or
  Frank Boscoe
  fpb01@health.state.ny.us
*/

options nocenter;
********** Data Files *******************************************************************************************************************;
*INPUT FILES;
* Read in formats used for the NHIA and NAPIIA algorithms  *;
filename fmats 'NHAPIIA_Formats_2013_09_12.xpt';
proc cimport  cat=formats file=fmats;

proc format;
  value $trufals
     '04','05','06','08','15','10','12',
     '07','22', '27','96','97'          = 1 /* yes */
      other                             = 0 /* no  */;

* Registry Incidence Input *;
*****************************************************************************;
/*NAACCR Version 13.0 input registry file, with the following fields included:
   Patient ID Number          [item #20,   column    42] ---- NAPIIA
   Addr at DX - State         [item #80,   column   145] ---- NAPIIA & NHIA
   County at DX               [item #90,   column   156] ---- NAPIIA & NHIA
   Race 1                     [item #160,  column   177] ---- NAPIIA & NHIA
   Race 2                     [item #161,  column   179] ---- NAPIIA
   Race 3                     [item #162,  column   181] ---- NAPIIA
   Race 4                     [item #163,  column   183] ---- NAPIIA
   Race 5                     [item #164,  column   185] ---- NAPIIA
   Spanish/Hispanic Origin    [item #190,  column   189] ---- NAPIIA & NHIA
   Sex                        [item #220,  column   192] ---- NAPIIA & NHIA
   Birthplace--Country        [item #254,  column   444] ---- NAPIIA & NHIA
   IHS link                   [item #192,  column   421] ---- NAPIIA & NHIA
   Sequence Number--Central   [item #380,  column   528] ---- NAPIIA
   Date of Diagnosis          [item #390,  column   530] ---- NAPIIA
   Name--Last                 [item #2230, column  3340] ---- NAPIIA & NHIA
   Name--First                [item #2240, column  3380] ---- NAPIIA
   Name--Maiden               [item #2390, column  3506] ---- NAPIIA & NHIA  */

filename regfile 'napiia-test.txt';

*OUTPUT FILES;

**** Output file Name - NAACCR Version 13 registry incidence file without names and with generated NHIA and NAPIIA values;
filename submit "napiia-sas-results.txt";

** NAPIIA Algorithm Output File;
***** Output File Containing Records For Manual Review (Excel Format)     **;
filename man_rvw 'NHAPIIA_manual_review_records.xls';

/*******************************************************************************************************************************************;
 NHIA Version 2.2.1 Macro
 *******************************************************************************************************************************************/;
%macro NHIA;

data registry_data ;
 set registry_data end=eof;
 retain in_NHIA_count out_count 0;
 in_NHIA_count+1;
 /*Evaluate Spanish/Hispanic Origin [item #190] for cases originally reported as Spanish/Hispanic

 Code Category
 1  Mexican (includes Chicano)
 2  Puerto Rican
 3  Cuban
 4  South or Central American (except Brazil)
 5  Other specified Spanish/Hispanic origin(includes European)
 6  Spanish, NOS; Hispanic, NOS; Latino, NOS (NOS- Not otherwise specified)

 All cases reported by reporting facilities as Spanish/Hispanic origin (codes 1, 2, 3, 4, 5 and 6) are assigned
 to those same codes for the naaccrhid. This step represents the direct identification
 component of the NAACCR Hispanic Identification Algorithm (naaccrhid). At this point, all remaining cases
 are assigned to non-Hispanic. */
 /******** Change for 2005 Dominican Republic code was added (Item 190 = 8)  *****/
 /* Step 1 - Evaluate NAACCR Data Element 190 Codes */

 if (1<=DataItem_190<=6) OR (DataItem_190=8) then naaccrhid=DataItem_190;
 else naaccrhid=0;
 /* Step 2 - Evaluate Spanish/Hispanic Origin [item #190] for cases originally reported as non-Hispanic, surname only,
             or unknown, and filter cases for indirect identification based on Birthplace */

  /*2008 Change - Cases that have a race 96/97 and are born in a country associated with a high prevalence of Hispanic Ethnicity
    are coded as Hispanic;Otherwise they are coded as Non-Hispanic;*/

  /* 2009 Change - Code for Belize was removed (252/'BLZ') */

  if DataItem_160 in ('96','97') then do;
          if DataItem_254='PRI' then naaccrhid=2; /*Puerto Rican by Birthplace*/
     else if DataItem_254='MEX' then naaccrhid=1; /*Mexican by Birthplace*/
     else if DataItem_254='CUB' then naaccrhid=3; /*Cuban by Birthplace*/
     else if DataItem_254='DOM' then naaccrhid=8; /*Dominican Republic Birthplace*/
     else if DataItem_254 in ('ZZC','GTM','HND','SLV','NIC','CRI','PAN','ZZS',
                              'COL','VEN','ECU','PER','BOL','CHL','ARG','PRY','URY') then naaccrhid=4; /*South or Central American by Birthplace - code 252 removed in 2009*/
     else if DataItem_254 in ('ESP','AND') then naaccrhid=5; /*Other specified Spanish/Hispanic Origin by Birthplace*/
     /*Change for 2009 - code no longer recodes API,NOS Hispanic cases with non-Hispanic birthplaces to Non Hispanic*/;
     *else naaccrhid=0;/* 'Non-Hispanic'*/
     end;

  /*2008 Change - Reclassify Hispanic NOS if birthplace is PR, Mexican, Cuban, Dom. Rep, or Central/South American
    Cases that are reported as Hispanic, NOS (Spanish/Hispanic Origin of 6) are reclassified accoriding to birthplace. By default, if a specific ethnicity
    cannot be determined, then NHIA is assigned 6. These cases are not processed through the Hispanic Surname portion of
    the algorithm.*/

  /* 2009 Change - Code for Belize was removed (252/'BLZ') */

  else if DataItem_190 = 6 then do;
          if DataItem_254='PRI' then naaccrhid=2; /*Puerto Rican by Birthplace*/
     else if DataItem_254='MEX' then naaccrhid=1; /*Mexican by Birthplace*/
     else if DataItem_254='CUB' then naaccrhid=3; /*Cuban by Birthplace*/
     else if DataItem_254='DOM' then naaccrhid=8; /*Dominican Republic Birthplace*/
     else if DataItem_254 in ('ZZC','GTM','HND','SLV','NIC','CRI','PAN','ZZS',
                              'COL','VEN','ECU','PER','BOL','CHL','ARG','PRY','URY') then naaccrhid=4; /*South or Central American by Birthplace - code 252 removed in 2009*/
     else if DataItem_254 in ('ESP','AND') then naaccrhid=5; /*Other specified Spanish/Hispanic Origin by Birthplace*/
     end;

  /* Evaluate casees with the following:

     Spanish/Hispanic Origin
     Code Category
     0  Non-Hispanic
     7  Surname only
     9  Unknown

     The indirect identification component involves cancer cases reported with Spanish/Hispanic origin of 0, 7 and 9.
     The goal is to classify these cases as Hispanic or non-Hispanic based on an evaluation of the strength of the
     birthplace, race, and/or surname associations with Hispanic ethnicity status.

     Some cases are assigned to Hispanic ethnicity based on birthplace. Cases born in birthplaces associated
     with a high prevalence of Spanish surnames but a low probability of Hispanic ethnic status are excluded
     from indirect identification, and keep the already assigned code of 0, non-Hispanic.

     Birthplaces Associated with Prevalence of Spanish Surnames but Low Probability of Hispanic Ethnicity
      Code                                       Birthplace
      VIR                                        U.S. Virgin Islands
      ASM,KIR,FSM,COK,TUV,GUM,MNP,MHL,TKL,UMI    Pacific Area
      BRA                                        Brazil
      GUY                                        Guyana
      SUR                                        Suriname
      GUF                                        French Guyana
      GBR,XEN,ENG,GGY,JEY,IMN,WLS,SCT,NIR,IRL,
      XSC,ISL,NOR,SJM,DNK,FRO,SWE,FIN,ALA,XGR,
      DEU,NLD,BEL,LUX,CHE,AUT,LIE,FRA,MCO,PRT,
      CPV,ITA,SMR,VAT,ROU,XSL,POL,XCZ,CZE,SWK,
      XYG,BIH,HRV,MKD,MNE,SRB,SVN,BGR,RUS,XUM,
      UKR,MDA,BLR,EST,LVA,LTU,GRC,HUN,ALB,GIB,
      MLT,CYP,ZZE                                Europe including Portugal
      PHL                                        Philippines */


  else if DataItem_190 in (0,7,9) and (put(DataItem_254,$BP.) NE 'Y') then do;
  /* In general, those cases born in birthplaces shown in the table below have high probabilities of being
     Hispanic. Although reporting guidelines encourage review of birthplace information when reporting Spanish/Hispanic
     origin, this step seeks to identify those cases missed during the reporting process.

     Birthplaces with High Probability of Hispanic Ethnicity

     Code   Birthplace            naaccrhid        Code   Birthplace     naaccrhid
     PRI    Puerto Rico           2                ZZS    South America  4
     MEX    Mexico                1                COL    Colombia       4
     CUB    Cuba                  3                VEN    Venezuela      4
     DOM    Dominican Republic    8                ECU    Ecuador        4
     ZZC    Central America       4                PER    Peru           4
     GTM    Guatemala             4                BOL    Bolivia        4
     HND    Honduras              4                CHL    Chile          4
     SLV    El Salvador           4                ARG    Argentina      4
     NIC    Nicaragua             4                PRY    Paraguay       4
     CRI    Costa Rica            4                URY    Uruguay        4
     PAN    Panama                4

     ESP,AND    Spain (including Canary Islands, Baleric Island,and Andorra)    5

     *** New for 2009 - 252/'BLZ' Belize was removed

     Remaining cases born in birthplaces with high probability of Hispanic ethnicity
     are classified Hispanic using naaccrhid. */

          if DataItem_254='PRI' then naaccrhid=2; /*Puerto Rican by Birthplace*/
     else if DataItem_254='MEX' then naaccrhid=1; /*Mexican by Birthplace*/
     else if DataItem_254='CUB' then naaccrhid=3; /*Cuban by Birthplace*/
     else if DataItem_254='DOM' then naaccrhid=8; /*Dominican Republic Birthplace*/
     else if DataItem_254 in ('ZZC','GTM','HND','SLV','NIC','CRI','PAN','ZZS',
                              'COL','VEN','ECU','PER','BOL','CHL','ARG','PRY','URY') then naaccrhid=4; /*South or Central American by Birthplace - 252 removed in 2009*/
     else if DataItem_254 in ('ESP','AND') then naaccrhid=5; /*Other specified Spanish/Hispanic Origin by Birthplace*/

     /*Step 3 - Exclude Cases from Indirect Identification Based on Race
       Cases reported as race codes 03-Native American, 06-Filipino or 07-Hawaiian are eliminated from indirect
       identification as these race groups often have Spanish surnames but are generally not of Hispanic ethnicity.
       These cases are eliminated from indirect identification and are classified as non-Hispanic.
       *** Change for 2008
       Cases with an IHS link (item 192) value of 1 are also excluded from indirect identification*/

     else if DataItem_160 in ('03','06','07') or DataItem_192 = '1' then naaccrhid=0;

     /* Step 4 (Change for 2005) -  Filter Cases for Indirect Identification Based on County of Residence
      *************************************************************************************************************************/
     /* Option 1 */
     else if NHIA_option='OPTION1' and percent_hispanic='< 5% Hispanic, or County = 999, 998, missing/invalid' and DataItem_190=0 then naaccrhid=0;
     /* Option 2 */
     else if NHIA_option='OPTION2' and percent_hispanic='< 5% Hispanic, or County = 999, 998, missing/invalid' and (DataItem_190=0 or DataItem_190=9) then naaccrhid=0;

     /*Step 5 - Exclude Cases from Indirect Identification Based on Surname Codes (by Sex)

     Male cases with last names that match those surnames on the Hispanic surname list identified as rarely Hispanic,
     having last names that are not on the Hispanic surname list, or having unknown last names are eliminated from
     indirect identification, and are classified as non-Hispanic.*/
     else if ((DataItem_220=1) and ((put(DataItem_2230,$rspan.) eq 'onlist') or
             (put(DataItem_2230,$spanall.) NE 'onlist') or (put(DataItem_2230,$reqitem.) eq 0))) then naaccrhid=0;

     /****** Change for 2005 *****/
     /*Female cases with maiden names that match those surnames on the Hispanic surname list identified as rarely Hispanic
       are eliminated from indirect identification and coded as non-Hispanic*/

     else if (DataItem_220=2) and (put(DataItem_2390,$rspan.) eq 'onlist')  then naaccrhid=0;

     /*Female cases with missing, indeterminate or classified as generally, moderately, or occasinally Hispanic
       are classified as Hispanic if their last names are coded heavily Hispanic.
       Otherwise they are coded as Non-Hispanic*/

     else if DataItem_220=2 and/*female*/
             (DataItem_2390=' ' or /*missing*/
             put(DataItem_2390,$spanall.) NE 'onlist' or /*indeterminate*/
             (put(DataItem_2390,$hspan.)  NE 'onlist' AND put(DataItem_2390,$rspan.) NE 'onlist')) then do;/*gen,mod,occ Hispanic*/
                if put(DataItem_2230,$hspan.) = 'onlist' then naaccrhid=7;
                else naaccrhid=0;
                end;
     /*Identify Cases with Heavily Hispanic Surnames (by Sex)

     For the remaining cases, males whose last names match those surnames on the Hispanic surname
     list identified as heavily Hispanic are classified Hispanic by NHIA surname match only.*/
     else if ((DataItem_220=1) and (put(DataItem_2230,$hspan.) eq 'onlist')) then naaccrhid=7;

     /*Females whose maiden names match those surnames on the Hispanic surname list identified
     as heavily Hispanic are classified Hispanic by NHIA surname match only. */
     else if ((DataItem_220=2) and (put(DataItem_2390,$hspan.) eq 'onlist')) then naaccrhid=7;
     end;
     out_count+1;
     output registry_data;

     if eof then do;
        file print;
        title 'NAACCR Hispanic/Latino Identification Algorithm (NHIA) v2.2';
        title2 "Summary of Records Read and Written";
        put
            #3 "********************************************************************************************"
	    #4  "The NHIA Algorithm was executed using the following NHIA option: " &NHIA_option
            #5  "Summary of Records Read,Written"
            #6  "  Total records read from input data set :   " in_NHIA_count    comma9.
            #7  "  Total records written to output data set : " out_count   comma9.
            #8  "********************************************************************************************"
	    ;
	end;
     run;

  /*create a dataset of cases originally coded as Hispanic, but algorithm coded as non-Hispanic/unknown*/
  data conflictstate;
  	set registry_data;
  	if 1<=DataItem_190<=7 and naaccrhid in(0,9);
  run;

  /*create a dataset of cases originally coded as non-Hispanic/unknown, but algorithm coded as Hispanic*/
  data conflictnaaccrhid;
  	set registry_data;
  	if DataItem_190 in(0,9) and 1<=naaccrhid<=7;
  run;

  proc freq data=registry_data;
   tables naaccrhid/list missing;
   title1 'NAACCR Hispanic/Latino Identification Algorithm (NHIA) v2.2.1';
   title2 'Frequency Distribution of NAACCR Hispanic Variable (naaccrhid)';
   format naaccrhid $nhiaf.;
  run;

  /*end of algorithm*/
%mend;
/*******************************************************************************************************************************************;
 End NHIA Macro
 *******************************************************************************************************************************************/;

/*******************************************************************************************************************************************;
 NAPIIA Version 1.2.1 Macro
 *******************************************************************************************************************************************/;
%macro NAPIIA;

data registry_data
     manual_review (keep= reviewReason DataItem_20 DataItem_380 DataItem_390 DataItem_2230 DataItem_2240 DataItem_2390 DataItem_160 DataItem_161 DataItem_162 DataItem_163 DataItem_164);
  set registry_data  end=eof;
  attrib reviewReason DataItem_20 DataItem_380 DataItem_390 DataItem_2230 DataItem_2240 DataItem_2390 DataItem_160 DataItem_161 DataItem_162 DataItem_163 DataItem_164 label=' ';
  length new_api $ 2;
  format new_API $2.  manReview $1. reviewReason $char5.;
  array races(5) DataItem_160 DataItem_161 DataItem_162 DataItem_163 DataItem_164;
  retain in_count output_count
         manreview_count direct_recode_count indirect_bp_count indirect_name_count 0;
  /* count the number of records read in from the data file */
  in_count+1;
  /* Initialize variables for each new record processed */
  run_NAPIIA=0;
  reviewReason = '     ';
  manreview='N';
  step_11=0;
  step_131=0;
  step_133=0;
  step_21=0;
  step_221=0;
  step_222=0;
  step_3=0;
  api_race_count=0;
  race_value_96_count=0;
  race_value_97_count=0;
  race_value_01_count=0;
  race_value_07_count=0;
  race_value_02_03_count=0;
  blank_88_count=0;
  runNames=0;
  other_unknown_race=0;

  /*
  STEP 1 -- Identify cases containing a race code of 96 or 97 and determine if they should be included in the algorithm.
  */
  /***Steps 1.1 & 1.2 --  Identify single race Asian NOS (96) or single race Pacific Islander (97);
  Step 1.1 Single race code of 96. All cases with a Race 1 code (data item 160) of 96 and no additional race codes will be identified and retained for
       Steps 3 and 4 of the algorithm. For these cases, the codes for Race 2 through Race 5 (data items 161-164) must be blank or 88.
  Records with 96 in race1 item #160 (DataItem_160) are processed through the NAPIIA algorithm are indicated by run_NAPIIA=1 ****/

  if DataItem_160 in ( '96', '97') and
     DataItem_161 in ( '88', '  ') and                   /* race2 */
     DataItem_162 in ( '88', '  ') and                   /* race3 */
     DataItem_163 in ( '88', '  ') and                   /* race4 */
     DataItem_164 in ( '88', '  ') then do;              /* race5 */
     if DataItem_160 = '96' then Asian_NOS=1;
     if DataItem_160 = '97' then Pacific_Islander_NOS=1;
     step_11=1;
     run_NAPIIA=1;
     end;



  ***Step 1.3 --  Race code of 96 in combination with one or more other race codes;
  ***             Race code of 97 in combination with one or more other race codes;
  /* Evaluated in this step are records that have at least two of the five race data items (items 160 through 164) filled with values other than blank or 88,
     at least one of which is coded with 96 or 97.
     For cases not identified in steps 1.1 and 1.2, examine each race code (race1-race5) and
     count the number of occurrences for each of the following:
         Race codes with a value of (04)-(32)
         Race code with a value of (01)
         Race code with a value of (02) or (03)
         Race code with a value of Asian NOS (96)
         Race code with a value of Pacific Islander NOS (97)
         Race code with a value of (88) or blank
	 Race code with a value of (07)
  */
  else do;
    do i=1 to 5;
       if put(races(i),$api.)='Y' then do;
          valid_api=i;						      /*** retain the race variable with a valid asian race ***/
          api_race_count+1;                                             /*** count the number valid api races **/
  	end;
       if races(i) = '96' then race_value_96_count+1;                   /*** count the number race codes with a value '96' **/
       if races(i) = '97' then race_value_97_count+1;                   /*** count the number race codes with a value '97' **/
       if races(i) = '07' then race_value_07_count+1;                   /*** count the number race codes with a value '07' **/
       if races(i) = '01' then race_value_01_count+1;                   /*** count the number race codes with a value '01' **/
       if races(i) in ('02', '03') then do;
          race_value_02_03_count+1;                                      /*** count the number race codes with a value '02' or '03' **/
  	race_02_03 = i;
  	end;
       if races(i) in ('88', '  ') then blank_88_count+1;               /*** count the number race codes with a value '88' or blank **/
       end;

    /* Scenario 1.3.1 */
    /* New for 2009 - Code updated to examine 96 OR 97;

    /* One race code is 04-32, one race code is 96 or 97; others are blank or 88.
       Action: The 04-32 takes precedence. The New API variable is assigned the specific race. No further steps required */
    if (api_race_count=1) and (race_value_96_count=1 or race_value_97_count=1) and (blank_88_count=3)  then do;
      step_131=1;
      new_api = races(valid_api); /*** assign the more specific asian race ***/
      direct_recode_count+1;
      run_NAPIIA=0;
      end;

    /* Scenario 1.3.2 */
    /* One Race code is 07; one race code is 96 or 97;
       Action: The  New API variable is assigned the value of 07. */
    else if (race_value_96_count=1 or race_value_97_count=1) and  (race_value_07_count >= 1) then do;
      new_api='07';
      direct_recode_count+1;
      run_NAPIIA=0;
      end;

    /* Scenario 1.3.3 */
    /* More than one race code is 04-32; one race code is 96 or 97; others are blank or 88.
       Action: The The value of Race1 takes precedence for the New API variable and the case is flagged for manual review.
       If one of the race codes is 07, then 07 takes precedence over all codes (no manual review is needed)*/
    else if (api_race_count > 1) and  (race_value_96_count=1 or race_value_97_count=1) and (api_race_count+blank_88_count=4) and (race_value_07_count=0) then do; /*** flag record for manual review ***/
      new_api=DataItem_160;
      manreview_count+1;
      manReview = 'Y';
      reviewReason = '1.3.3';
      run_NAPIIA=0;
      output manual_review;
      end;

    /* Scenario 1.3.4 */
    /* One race code is 01; one race code is 96 or 97; others are blank or 88.
       Action: The 96/97 code takes precedence. Go to step 3.
       New For 2009  - Assign either 96 or 97*/
    else if race_value_01_count=1 and (race_value_96_count=1 or race_value_97_count=1) and blank_88_count=3 then do;
       if race_value_96_count=1 then do;
          new_api="96";
	  Asian_NOS=1;
	  end;
       else if race_value_97_count=1 then do;
          new_api="97";
	  Pacific_Islander_NOS=1;
          end;
       step_134=1;
       run_NAPIIA=1;  /*** Go to Step 3 - Run the birthplace/Name algorithm ***/
       end;

    /* Scenario 1.3.5 */
    /* One or more race codes is 02-03; one race code is 96 or 97; others are blank or 88.
       Action: The case is flagged for manual review. */
    else if (race_value_02_03_count >= 1) and (race_value_96_count=1 or race_value_97_count=1) and (race_value_02_03_count + blank_88_count = 4) then do; /*** flag record for manual review ***/
      new_api=DataItem_160;
      manreview_count+1;
      manReview = 'Y';
      reviewReason = '1.3.5';
      run_NAPIIA=0;
      output manual_review;
      end;

    /* Scenario 1.3.6 */
    /* One race code is 96;  one race code is 97; others are any value
       Action: The case is flagged for manual review. */
    else if (race_value_96_count=1) and (race_value_97_count=1)then do;
      new_api=DataItem_160;
      manreview_count+1;
      manReview = 'Y';
      reviewReason = '1.3.6';
      run_NAPIIA=0;
      output manual_review;
      end;

    /* Scenario 1.3.7 */
    /*Any multiple race combination involving code 96 or 97 not listed in steps 1.3.1-1.3.6
      Action: The case is flagged for manual review. */
    else if ((race_value_96_count > 0 or race_value_97_count > 0) and run_NAPIIA =0) then do;
      new_api=DataItem_160;
      manreview_count+1;
      manReview = 'Y';
      reviewReason = '1.3.7';
      run_NAPIIA=0;
      output manual_review;
      end;
    end;

  /* STEP 2 - Direct Code Single Race Cases */
  /* Step 2.1 - Direct Code Single Race API Cases */
  /* Directly code all single racecases in this step.
     These consist of all cases with codes 01 through 32, 98, and 99  in Race 1 (data item 160) (Table 2.1).
     For these cases, the Race 2 through Race 5 fields (data items 161-164) must be blank or 88.
     ****New for 2009
     API,NOS cases (96,97) with item 190 coded as Hispanic are directly recoded as 96,97
     ****************; */

  if (DataItem_160 in ('01','02','03','98','99') or put(DataItem_160,$api.)='Y') and
      DataItem_161 in ( '88', '  ')  and
      DataItem_162 in ( '88', '  ')  and
      DataItem_163 in ( '88', '  ')  and
      DataItem_164 in ( '88', '  ')  then do;
      new_api=DataItem_160;
      direct_recode_count+1;
      step_21=1;
      end;
  if  DataItem_160 ='99'  and
      DataItem_161 ='99'  and
      DataItem_162 ='99'  and
      DataItem_163 ='99'  and
      DataItem_164 ='99'  then do;
      new_api='99';
      direct_recode_count+1;
      step_21=1;
      end;
  if (DataItem_160 in ('96','97')) and (DataItem_190 in ('1','2','3','4','5','6','8')) and
      DataItem_161 in ( '88', '  ')  and
      DataItem_162 in ( '88', '  ')  and
      DataItem_163 in ( '88', '  ')  and
      DataItem_164 in ( '88', '  ')  then do;
      new_api=DataItem_160;
      run_NAPIIA=0;
      direct_recode_count+1;
      step_21=1;
      end;

  /* Step 2.2 Multiple Race Cases */
  /* Evaluated in this step are records that have at least two of the five race data items (items 160 through 164)
     filled with values other than blank or 88.*/
  /* Scenario 2.2.1 */
  /* One race code is 01, one race code is 02-32; others are blank or 88.
     Action: The 02-32 takes precedence. */
  /* New for 2009 - Code 97 is no longer included in this step */
  if  race_value_01_count=1 and (race_value_02_03_count=1 or api_race_count=1) and blank_88_count=3 then do;
      if race_value_02_03_count=1 then new_api=races(race_02_03);
      else if api_race_count=1 then new_api=races(valid_api);

      run_NAPIIA=0;
      direct_recode_count+1;
      step_221=1;
      end;

  /* Scenario 2.2.2 ***Change for 2008 ****/
  /* One race code is 07, and at least one other race code in race2-race5
     Action: Per SEER Program Coding and Staging Manual 2007 page 39, the Hwaiian code takes precedence.*/
  else if race_value_07_count=1 and blank_88_count < 4 and race_value_96_count=0 then  do;
     new_api='07';
     direct_recode_count+1;
     end;

  /* Scenario 2.2.3 */
  /* All other multiple race combinations involving race values of 02-32
     Action: Until UDS comes up with a recommnedation as to how to deal with multiple race scenarios, RACE1 will take precedence. */
  else if step_11 ne 1 and race_value_96_count = 0 and race_value_97_count = 0 and (blank_88_count < 4 or blank_88_count = 5) and new_api ne '99' then do;
      new_api=DataItem_160;
      manreview_count+1;
      run_NAPIIA=0;
      manReview = 'Y';
      reviewReason = '2.2.3';
      output manual_review;
      end;

  /******* Steps 3 and 4 - Indirect Identification Steps ***************************************************************************************************
    The indirect identification component of NAPIIA v1 is applied only to single race persons that have a code of 96  on NAACCR Standard data item 160
    as identified in Step 1.1  or certain multiple race persons identified in Step 1.3.3
  **********************************************************************************************************************************************************/
  if run_NAPIIA then do;
  /******** STEP 3
    Step 3.1 - If a person has a birthplace (data item 250) of any of the countries listed in Table 3.1 of the NAPIIA algorithm, the person should be coded
               to the specific Asian or Pacific Islander race group. These persons have a high probability of being of the specific Asian or Pacific Islander
               race groups identifiable in NAPIIA v1.

    Step 3.2 - If a person has a birthplace (data item 250) of any of the countries listed in Table 3.2 of the NAPIIA algorithm, the birthplace is considered
               to be non-predictive. The race code 96 should be retained and no further steps in the algortihm should be performed.

    Change for 2008
    Step 3.3 - If a person has a birthplace (data item 250) that is Latin American, Table 3.3, the names portion of NAPIIA is bypassed.
               The race code 96 should be retained and no further steps in the algortihm should be performed.
  **********************************************************************************************************************************************************/
    step_3_in_count+1;
    api_birth_place=put(DataItem_254,$api_bp.);
    if api_birth_place = 'NA' then runNames=1; /* NA stands for Non-API Specific Birthplace */
    else if  api_birth_place = 'LA' then do; /* LA stands for Latin American Birthplace */
      new_api=DataItem_160;/* leave as 96  or 97*/;
      direct_recode_count+1;
      step_33=1;
      RunNames=0;
      end;
    else if api_birth_place = 'NP' then do; /* NP stands for Non-Predictive Birthplace*/
      new_api=DataItem_160;/* leave as 96  or 97*/;
      direct_recode_count+1;
      step_32=1;
      end;
    else do;
      if (Asian_NOS and api_birth_place in ('04','05','06','08','17','16','10','14','13')) or
         (Pacific_Islander_NOS and api_birth_place in ('20', '25', '27')) then do;
         new_api=api_birth_place;
         indirect_bp_recode_count+1;
         step_31=1;
      end;
      else runNames=1;
    end;

  /******* STEP 4 - Indirect Identification Based on Name - Code 96  97******************************************************************
           for males:
               M1. Check surname with Census surname lists
               M2. Check surname with Lauderdale surname lists
               M3. Check surname with NAACCR Surname List (PPV > =.75)
               M4. Check given name with Lauderdale given name lists
               M5. Check given name with NAACCR Given Name List (PPV > =.75)

           for females:
               F1. Check if maiden name is blank
               If maiden name is blank:
                  F2a. Check surname with Census surname lists
                  F3a. Check surname with Lauderdale surname lists
                  F4a. Check surname with NAACCR Surname List (PPV > =.75)
                  F5a. Check given name with Lauderdale given name lists
                  F6a. Check given name with NAACCR Given Name List(PPV > =.75
               If maiden name is not blank:
                  F2b. Check maiden name with Census Surname lists
                  F3b. Check maiden name with Lauderdale Surname lists
                  F4b. Check maiden name with NAACCR Surname List (PPV > =.75)
                  F5b. Check given name with Lauderdale given name lists
                  F6b. Check given name with NAACCR Given Name List (PPV > =.75)
                  F7b. Check surname name with Census Surname lists
                  F8b. Check surname with Lauderdale surname lists
                  F9b. Check surname with NAACCR Surname List (PPV > =.75)


  ********************************************************************************************************************************/
    /*** If item 160 is '96' in step 1.1 or if a case is identified as '96' in step 1.3.3
        and if record hasn't been assigned a new value in step 3. */

    if runNames then do;
       /******** Create variables to check if particular name is in a particular list  ********************************************************/
       /*** New for 2009 - Only first 12 characters of name are considered when searching Lauderdale lists                                    */
       surname_12_chars    = substr(surname,1,12);
       given_name_12_chars = substr(given_name,1,12);
       maiden_name_12_chars= substr(maiden_name,1,12);
       surname_in_lauderdale_surname  = put(put(surname_12_chars,    $laud_s. ),$trufals.); /*Surname in Lauderdale surname                  */
       given_in_lauderdale_given_m    = put(put(given_name_12_chars, $laud_gm.),$trufals.); /*Given Name in Lauderdale given males           */
       given_in_lauderdale_given_f    = put(put(given_name_12_chars, $laud_gf.),$trufals.); /*Given Name in Lauderdale given females         */
       surname_in_naaccr_high_surname = put(put(surname,             $ncr_hs. ),$trufals.); /*Surname in NAACCR High PPV Surname             */
       given_in_naaccr_high_given     = put(put(given_name,          $ncr_hg. ),$trufals.); /*Given Name in NAACCR High PPV given name       */
       maiden_in_lauderdale_surname   = put(put(maiden_name_12_chars,$laud_s. ),$trufals.); /*Maiden Name in Lauderdale surname              */
       maiden_in_naaccr_high_surname  = put(put(maiden_name,         $ncr_hs. ),$trufals.); /*Maiden Name in NAACCR High PPV Surname         */
       /*New for 2009:									              				               */
       surname_in_census_asian_surname = put(put(surname,             $cens_as. ),$trufals.); /*Surname in Census 2000 Asian surname         */
       surname_in_census_pi_surname    = put(put(surname,             $cens_pi. ),$trufals.); /*Surname in Census 2000 PI surname            */
       maiden_in_census_asian_surname  = put(put(maiden_name,         $cens_as. ),$trufals.); /*Maiden Name in Census 2000 Asian surname     */
       maiden_in_census_pi_surname     = put(put(maiden_name,         $cens_pi. ),$trufals.); /*Maiden Name in Census 2000 PI surname        */
       /***************************************************************************************************************************************/
       if sex = '1' then do;    /***** Male Cases ****/
  	  male_count+1;
          if Asian_NOS and surname_in_census_asian_surname              then new_api = put(surname,            $cens_as. ); /*M1. Surname in Census 2000 Asian Surname */
          else if Pacific_Islander_NOS and surname_in_census_pi_surname then new_api = put(surname,            $cens_pi. ); /*M1. Surname in Census 2000 Pacific Islander Surname */
          else if Asian_NOS and surname_in_lauderdale_surname           then new_api = put(surname_12_chars,   $laud_s. ); /*M2. Surname in Lauderdale surname */
          else if Asian_NOS and surname_in_naaccr_high_surname          then new_api = put(surname,            $ncr_hs. ); /*M3. Surname in NAACCR High PPV Surname */
          else if Asian_NOS and given_in_lauderdale_given_m             then new_api = put(given_name_12_chars,$laud_gm.); /*M4. Given Name in Lauderdale given males*/
          else if Asian_NOS and given_in_naaccr_high_given              then new_api = put(given_name,         $ncr_hg. ); /*M5. Given Name in NAACCR High PPV given name*/
          else if not other_unknown_race then new_api=DataItem_160;

	  /*increment appropriate summary count*/
  	  if new_api = DataItem_160 then direct_recode_count+1;
	  else indirect_name_recode_count+1;
       end;

       else if sex = '2' then do;    /***** Female Cases ****/
  	  female_count+1;
  	  /* Do checks if missing maiden name */
  	  if missing(maiden_name) then do;
             if Asian_NOS and surname_in_census_asian_surname              then new_api = put(surname,            $cens_as. ); /*F2.a. Surname in Census 2000 Asian Surname */
             else if Pacific_Islander_NOS and surname_in_census_pi_surname then new_api = put(surname,            $cens_pi. ); /*F2.a. Surname in Census 2000 Pacific Islander Surname */
  	     else if Asian_NOS and surname_in_lauderdale_surname           then new_api = put(surname_12_chars,   $laud_s. ); /*F3.a. Surname in Lauderdale surname */
  	     else if Asian_NOS and surname_in_naaccr_high_surname          then new_api = put(surname,            $ncr_hs. ); /*F4.a. Surname in NAACCR High PPV Surname */
  	     else if Asian_NOS and given_in_lauderdale_given_f             then new_api = put(given_name_12_chars,$laud_gf.); /*F5.a. Given Name in Lauderdale given females*/
             else if Asian_NOS and given_in_naaccr_high_given              then new_api = put(given_name,         $ncr_hg. ); /*F6.a. Given Name in NAACCR High PPV given name*/
  	     else if not other_unknown_race then new_api=DataItem_160;
  	  end;

  	  /* Do checks if not missing maiden name */
	  else if not missing(maiden_name) then do;
             if Asian_NOS and maiden_in_census_asian_surname               then new_api = put(maiden_name,         $cens_as. ); /*F2.b. Maiden Name in Census 2000 Asian Surname */
             else if Pacific_Islander_NOS and maiden_in_census_pi_surname  then new_api = put(maiden_name,         $cens_pi. ); /*F2.b. Maiden Name in Census 2000 Pacific Islander Surname */
             else if Asian_NOS and maiden_in_lauderdale_surname            then new_api = put(maiden_name_12_chars,$laud_s. ); /*F3.b. Maiden Name in Lauderdale surname */
             else if Asian_NOS and maiden_in_naaccr_high_surname           then new_api = put(maiden_name,         $ncr_hs. ); /*F4.b. Maiden Name in NAACCR High PPV Surname */
             else if Asian_NOS and given_in_lauderdale_given_f             then new_api = put(given_name_12_chars, $laud_gf.); /*F5.b. Given Name in Lauderdale given females*/
             else if Asian_NOS and given_in_naaccr_high_given              then new_api = put(given_name,          $ncr_hg. ); /*F6.b. Given Name in NAACCR High PPV given name*/
             else if Asian_NOS and surname_in_census_asian_surname         then new_api = put(surname,            $cens_as. ); /*F7.b. Surname in Census 2000 Asian Surname */
             else if Pacific_Islander_NOS and surname_in_census_pi_surname then new_api = put(surname,            $cens_pi. ); /*F7.b. Surname in Census 2000 Pacific Islander Surname */
             else if Asian_NOS and surname_in_lauderdale_surname                       then new_api = put(surname_12_chars,    $laud_s. ); /*F8.b. Surname in Lauderdale surname */
             else if Asian_NOS and surname_in_naaccr_high_surname                      then new_api = put(surname,             $ncr_hs. ); /*F9.b. Surname in NAACCR High PPV Surname */
  	     else if not other_unknown_race then new_api=DataItem_160;
          end;

	  /*increment appropriate summary count*/
  	  if new_api = DataItem_160 then direct_recode_count+1;
	  else indirect_name_recode_count+1;
       end;

       else do;    /***** Non-Male Female Cases ****/
          non_male_female_count+1;
          if Asian_NOS and surname_in_census_asian_surname              then new_api = put(surname,            $cens_as. ); /*NMF1. Surname in Census 2000 Asian Surname */
          else if Pacific_Islander_NOS and surname_in_census_pi_surname then new_api = put(surname,            $cens_pi. ); /*NMF1. Surname in Census 2000 Pacific Islander Surname */
          else if Asian_NOS and surname_in_lauderdale_surname           then new_api = put(surname_12_chars,$laud_s. ); /*NMF2. Surname in Lauderdale surname */
          else if Asian_NOS and surname_in_naaccr_high_surname          then new_api = put(surname,         $ncr_hs. ); /*NMF3. Surname in NAACCR High PPV Surname */
          else if not other_unknown_race then new_api=DataItem_160;

	  /*increment appropriate summary count*/
  	  if new_api = DataItem_160 then direct_recode_count+1;
	  else indirect_name_recode_count+1;
       end;

    end; *End step 4 ;
    end; ***End if run_NAPIIA;
    /* Output data record and add 1 to output_count */
    output_count+1;
    output registry_data;


  ******** Create Counts For Final Summary Report;
  if eof then do;

     /* Manual Review Stats */
     manreview_pct=100*manreview_count/output_count;

     /* Direct Recode Stats */
     direct_recode_pct=100*direct_recode_count/output_count;

     /* Indirect Review Stats */
     indirect_bp_recode_pct=100*indirect_bp_recode_count/output_count;
     indirect_name_recode_pct=100*indirect_name_recode_count/output_count;


     file print;
     title 'NAACCR Asian Pacific Islander Identification Algorithm (NAPIIA) v1.2.1';
     title2 "Summary Counts and Percentages";
     put
         #3 "************************************************************************************************************************************************************"
         #4  "Summary of Records Read and Written to Output File"
         #5  "  Total records read in :                                                                          " in_count           comma9.
         #6  "  Total records output to final file :                                                             " output_count       comma9.
         #7 "************************************************************************************************************************************************************"

         #9  "Total Records Flagged For Manual Review - New API Variable Directly Recoded to the Value of Race1: " manreview_count            comma9. " (" manreview_pct 5.1 "%)"
         #10 "Total Records Directly Recoded to New API Variable:                                                " direct_recode_count        comma9. " (" direct_recode_pct 5.1 "%)"
         #11 "Total Records Indirectly Recoded to New API Variable Based on Birthplace :                         " indirect_bp_recode_count   comma9. " (" indirect_bp_recode_pct   5.1 "%)"
         #12 "Total Records Indirectly Recoded to New API Variable Based on Name :                               " indirect_name_recode_count comma9. " (" indirect_name_recode_pct   5.1 "%)"

         #14 "************************************************************************************************************************************************************"
         ;
     end;
     run;


  /* Summary Frequency Distributions and print listings*/
  /* New for 2009 - Titles in reports 1.1, 1.3.1-1.3.3, and 2.1 were updated */

  Proc freq data=registry_data;
    tables New_api/list missing;
    format New_api DataItem_160 $race_n.;
    title1 'NAACCR Asian Pacific Islander Identification Algorithm (NAPIIA) v1.2.1';
    title2 'Frequency Distribution the new NAACCR API Variable (new_api)';
    run;

  Proc freq data=registry_data;
    tables New_api/list missing;
    where step_11=1;
    format New_api DataItem_160 $race_n.;
    title1 'NAACCR Asian Pacific Islander Identification Algorithm (NAPIIA) v1.2.1';
    title2 'Step 1.1 in the NAACCR Asian Pacific Islander Algorithm';
    title3 'Frequency Distribution the new NAACCR API Variable (new_api)';
    title4 'For Records With Race1 Field (DataItem_160) Value of 96 or 97 and No Additional Information in Race2 - Race5';
    run;

  Proc freq data=registry_data;
    tables DataItem_160*DataItem_161*DataItem_162*DataItem_163*DataItem_164*New_api/list missing;
    where step_131=1;
    format New_api DataItem_160-DataItem_164 $race_n.;
    title1 'NAACCR Asian Pacific Islander Identification Algorithm (NAPIIA) v1.2.1';
    title2 'Step 1.3.1 in the NAACCR Asian Pacific Islander Algorithm';
    title3 'Frequency Distribution to Verify  the Recoding of NAACCR API Variable';
    title4 'Among Records Where One Race Field Has the Value of 04-32, and One Race Field Has a Value of 96 or 97';
    run;

  Proc freq data=registry_data;
    tables DataItem_160*DataItem_161*DataItem_162*DataItem_163*DataItem_164*New_api/list missing;
    where step_133=1;
    format New_api DataItem_160-DataItem_164 $race_n.;
    title1 'NAACCR Asian Pacific Islander Identification Algorithm (NAPIIA) v1.2.1';
    title2 'Step 1.3.3 in the NAACCR Asian Pacific Islander Algorithm';
    title3 'Frequency Distribution to Verify  the Recoding of NAACCR API Variable';
    title4 'Among Records Where One Race Field Has the Value of 01, and One Race Field Has a Value of 96';
    run;

  Proc freq data=registry_data;
    tables DataItem_160*New_api/list missing;
    where step_21=1;
    format New_api DataItem_160 $race_n.;
    title1 'NAACCR Asian Pacific Islander Identification Algorithm (NAPIIA) v1.2.1';
    title2 'Step 2.1 in the NAACCR Asian Pacific Islander Algorithm';
    title3 'Frequency Distribution of Race1 vs the new NAACCR API Variable';
    title4 'For Records That Are Directly Recoded to the New Api Variable';
    run;

  Proc freq data=registry_data;
    tables DataItem_160*DataItem_161*DataItem_162*DataItem_163*DataItem_164*New_api/list missing;
    where step_221=1;
    format New_api DataItem_160-DataItem_164 $race_n.;
    title1 'NAACCR Asian Pacific Islander Identification Algorithm (NAPIIA) v1.2.1';
    title2 'Step 2.2.1 in the NAACCR Asian Pacific Islander Algorithm';
    title3 'Frequency Distribution to Verify  the Recoding of NAACCR API Variable';
    title4 'Among Records Where One Race Field Has the Value of 01, and One Race Field Has a Value of 02-32';
    run;

  Proc freq data=registry_data;
    tables New_api*DataItem_254_print/list missing;
    where step_31=1;
    format New_api $race_n. ;
    title1 'NAACCR Asian Pacific Islander Identification Algorithm (NAPIIA) v1.2.1';
    title2 'Step 3.1 in the NAACCR Asian Pacific Islander Algorithm';
    title3 'Frequency Distributions for the New Recoded API Variable vs. Birthplace (NAACCR Item #250) ';
    title4 'For Records that Are Recoded Indirectly Based on Birthplace';
    run;

  Proc freq data=registry_data;
    tables New_api*DataItem_254_print/list missing;
    where step_32=1;
    format New_api $race_n. ;
    title1 'NAACCR Asian Pacific Islander Identification Algorithm (NAPIIA) v1.2.1';
    title2 'Step 3.2 in the NAACCR Asian Pacific Islander Algorithm';
    title3 'Frequency Distributions for the New Recoded API Variable vs. Birthplace (NAACCR Item #250) ';
    title4 'For Records that Have a Non-Predictive Birthplace';
    run;

  Proc freq data=registry_data;
    tables DataItem_160*DataItem_161*DataItem_162*DataItem_163*DataItem_164*New_api/list missing;
    where manreview='Y';
    format New_api DataItem_160-DataItem_164 $race_n.;
    title1 'NAACCR Asian Pacific Islander Identification Algorithm (NAPIIA) v1.2.1';
    title2 'Steps 1.3.2, 1.3.4, 1.3.5, 1.3.6, and 2.2.2 in the NAACCR Asian Pacific Islander Algorithm';
    title3 'Frequency Distribution to Verify the Recoding of NAACCR API Variable';
    title4 'Among Records Where There Are Multiple Race Fields';
    title5 'The New API Variable Is Directly Recoded From the Value of Race1';
    title6 'An Excel File Listing These Records For Manual Review Is Also Produced';

  ****** Export records into Excel format;
  Proc export
       data=manual_review
       outfile=man_rvw
       dbms=csv
       replace;
       run;
  /*end of algorithm*/
%mend;
/*******************************************************************************************************************************************;
 End NAPIIA Macro
 *******************************************************************************************************************************************/;




****** Read in Registry Incidence File;
data registry_data ;
    infile regfile truncover missover lrecl=5564 pad end=last_record;
      input Incidence_record	   $1 -	3339 @;	label Incidence_record = 'Incidence Record';
      input DataItem_20	          $42 -	49   @;	label DataItem_20	   = 'Patient ID Number';
      input DataItem_80          $145 - 146  @; label DataItem_80      = 'Addr at DX - State';
      input DataItem_90          $156 - 158  @; label DataItem_90      = 'County at DX';
      input DataItem_160	     $177 -	178  @;	label DataItem_160	   = 'Race 1';
      input DataItem_161	     $179 -	180  @;	label DataItem_161	   = 'Race 2';
      input DataItem_162	     $181 -	182  @;	label DataItem_162	   = 'Race 3';
      input DataItem_163	     $183 -	184  @;	label DataItem_163	   = 'Race 4';
      input DataItem_164  	     $185 -	186  @;	label DataItem_164	   = 'Race 5';
      input DataItem_190         $189 - 189  @; label DataItem_190     = 'Spanish/Hispanic Origin';
      input DataItem_220	     $192 -	192  @;	label DataItem_220	   = 'Sex';
      input DataItem_192         $421 - 421  @; label DataItem_192     = 'IHS Link';
      input DataItem_254         $444 - 446  @; label DataItem_254     = 'Birthplace--Country';
      input DataItem_380	     $528 -	529  @;	label DataItem_380	   = 'Sequence Number--Central';
      input DataItem_390	     $530 - 537  @; label DataItem_390	   = 'Date of Diagnosis';
      input DataItem_2230	    $3340 -	3379 @;	label DataItem_2230    = 'Name--Last'; /*Trunc to 15 chars*/
      input DataItem_2240	    $3380 - 3419 @;	label DataItem_2240    = 'Name--First'; /*Trunc to 15 chars*/
      input DataItem_2390	    $3506 -	3545 @;	label DataItem_2390    = 'Name--Maiden'; /*Trunc to 15 chars*/

  retain number_of_records records_w_no_lastname 0;

  DataItem_254_print=trim(put(DataItem_254,$b_place.));
  given_name  = DataItem_2240;
  maiden_name = DataItem_2390;
  surname     = DataItem_2230;
  sex         = DataItem_220;

  **** create State/County Variable and check to make sure an option is chosen;
  percent_hispanic=put(DataItem_80||DataItem_90,$pct10_hsp.);
  NHIA_option=upcase(&NHIA_option);
  output registry_data;
  if NHIA_option not in ('ALL RECORDS','OPTION1','OPTION2') then do;
     file print;
     put
       #1 "******************************************************************************************************************************************************"
       #2 "                     NHIA Algorithm ERROR - MACRO VARIABLE 'NHIA_option' MUST HAVE A VALUE OF 'All Records', 'OPTION1', OR 'OPTION2'                  "
       #3 "Please read the NHIA documentation at the beginning of this program, and verify that the correct option is chosen.                                     "
       #4 "******************************************************************************************************************************************************";
     abort;
     end;

 /* Count the number of records with last name present - if the number of records = the number of records missing last name
  then print an error message and abort */
  number_of_records+1;
  if missing(surname) then records_w_no_lastname+1;
  if last_record and number_of_records=records_w_no_lastname then do;
     file print;
     put
       #1 "******************************************************************************************************************************************************"
       #2 "                                            ERROR: NO LAST NAME DATA FOUND 										 "
       #3 "The NAACCR Hispanic Identification Algorithm (NHIA)/NAACCR Asian Pacific Islander Identification Algorithm (NAPIIA) was not executed.                 "
       #4 "The data field of Last Name [NAACCR item #2230] is missing for all records in the input file.                                                         "
       #5 "******************************************************************************************************************************************************";
     abort;
     end;
run;

%NAPIIA;
%NHIA;

/*Create NAACCR version 13 file for submission - Incidence data with generated with NHIA and NAPIIA values*/
data _null_;
  set registry_data;
  DataItem_10='I'; /*Changes record type to 'Incidence'*/
    file submit lrecl=3339 pad;
    put @1		Incidence_record
        @1		DataItem_10
        @418	naaccrhid
        @419    new_API;
run;



